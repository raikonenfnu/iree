################################################################################
# Autogenerated by build_tools/bazel_to_cmake/bazel_to_cmake.py from           #
# iree/samples/simple_embedding/BUILD                                          #
#                                                                              #
# Use iree_cmake_extra_content from iree/build_defs.oss.bzl to add arbitrary   #
# CMake-only content.                                                          #
#                                                                              #
# To disable autogeneration for this file entirely, delete this header.        #
################################################################################

iree_add_all_subdirs()

iree_c_embed_data(
  NAME
    simple_embedding_test_llvm_aot_rv64
  SRCS
    "data/simple_embedding_test-llvm-aot_rv64.vmfb"
  C_FILE_OUTPUT
    "simple_embedding_test_llvm_aot_rv64.c"
  H_FILE_OUTPUT
    "simple_embedding_test_llvm_aot_rv64.h"
  IDENTIFIER
    "iree_samples_simple_embedding_rv64_test_module"
  FLATTEN
  PUBLIC
)

if(NOT ${IREE_TARGET_BACKEND_DYLIB-LLVM-AOT} OR NOT ${IREE_TARGET_BACKEND_VULKAN-SPIRV}
   OR NOT ${IREE_HAL_DRIVER_DYLIB} OR NOT ${IREE_HAL_DRIVER_VULKAN})
  return()
endif()

iree_cc_binary(
  NAME
    simple_embedding_dylib
  SRCS
    "device_dylib.c"
    "simple_embedding.c"
  DEPS
    ::simple_embedding_test_bytecode_module_c
    ::simple_embedding_test_llvm_aot_rv64
    iree::base
    iree::hal
    iree::hal::local
    iree::hal::local::loaders::embedded_library_loader
    iree::hal::local::loaders::legacy_library_loader
    iree::hal::local::task_driver
    iree::modules::hal
    iree::task::api
    iree::vm
    iree::vm::bytecode_module
)

iree_cc_binary(
  NAME
    simple_embedding_vulkan
  SRCS
    "device_vulkan.c"
    "simple_embedding.c"
  DEPS
    ::simple_embedding_test_bytecode_module_c
    ::simple_embedding_test_llvm_aot_rv64
    iree::base
    iree::hal
    iree::hal::vulkan::registration
    iree::modules::hal
    iree::vm
    iree::vm::bytecode_module
)

if(${IREE_BUILD_EXPERIMENTAL_ROCM})
  iree_cc_binary(
    NAME
      simple_embedding_rocm
    SRCS
      "device_rocm.c"
      "simple_embedding.c"
    DEPS
      ::simple_embedding_test_bytecode_module_c
      ::simple_embedding_test_llvm_aot_rv64
      iree::base
      iree::hal
      experimental::rocm::registration
      iree::modules::hal
      iree::vm
      iree::vm::bytecode_module
  )
endif()

iree_cc_binary(
  NAME
    simple_embedding_local_sync
  SRCS
    "device_local_sync.c"
    "simple_embedding.c"
  DEPS
    ::simple_embedding_test_bytecode_module_c
    ::simple_embedding_test_llvm_aot_rv64
    iree::base
    iree::hal
    iree::hal::local
    iree::hal::local::loaders::legacy_library_loader
    iree::hal::local::sync_driver
    iree::modules::hal
    iree::vm
    iree::vm::bytecode_module
)

iree_bytecode_module(
  NAME
    simple_embedding_test_bytecode_module
  SRC
    "simple_embedding_test.mlir"
  C_IDENTIFIER
    "iree_samples_simple_embedding_test_module"
  FLAGS
    "-iree-mlir-to-vm-bytecode-module"
    "-iree-hal-target-backends=dylib-llvm-aot"
    "-iree-hal-target-backends=vulkan-spirv"
    "-iree-hal-target-backends=rocm"
    "-iree-rocm-target-chip=gfx906"
    "-iree-rocm-link-bc=true"
    "-iree-llvm-debug-symbols=false"
  PUBLIC
)

# Bytecode is built without cross-compilation. Bypass the following test if it
# is not built for the host machine.

if(NOT CMAKE_SYSTEM_PROCESSOR MATCHES "amd64|x86_64|AMD64")
  return()
endif()

iree_run_binary_test(
  NAME
    "simple_embedding_dylib_test"
  TEST_BINARY
    ::simple_embedding_dylib
)

iree_run_binary_test(
  NAME
    "simple_embedding_local_sync_test"
  TEST_BINARY
    ::simple_embedding_local_sync
)

iree_run_binary_test(
  NAME
    "simple_embedding_vulkan_test"
  TEST_BINARY
    ::simple_embedding_vulkan
)

### BAZEL_TO_CMAKE_PRESERVES_ALL_CONTENT_BELOW_THIS_LINE ###
